// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gateway.proto

/*
Package gateway is a generated protocol buffer package.

Gateway Service

Gateway Service API consists of a single service which returns a message.

It is generated from these files:
	gateway.proto

It has these top-level messages:
	Message
*/
package gateway

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"
import alfa "github.com/luigi-riefolo/eGO/src/alfa/pb"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Message represents a simple message sent to the Gateway service.
type Message struct {
	// Id represents the message identifier.
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// The message to be sent.
	Msg string `protobuf:"bytes,2,opt,name=msg" json:"msg,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Message) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "gateway.Message")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GatewayService service

type GatewayServiceClient interface {
	// Get method receives a simple message and returns it.
	// The message posted as the id parameter will also be returned.
	Get(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*Message, error)
	// Gateway method sets a simple message.
	Set(ctx context.Context, in *Message, opts ...grpc.CallOption) (*google_protobuf1.Empty, error)
	Test(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*alfa.Message, error)
}

type gatewayServiceClient struct {
	cc *grpc.ClientConn
}

func NewGatewayServiceClient(cc *grpc.ClientConn) GatewayServiceClient {
	return &gatewayServiceClient{cc}
}

func (c *gatewayServiceClient) Get(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := grpc.Invoke(ctx, "/gateway.GatewayService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayServiceClient) Set(ctx context.Context, in *Message, opts ...grpc.CallOption) (*google_protobuf1.Empty, error) {
	out := new(google_protobuf1.Empty)
	err := grpc.Invoke(ctx, "/gateway.GatewayService/Set", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayServiceClient) Test(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*alfa.Message, error) {
	out := new(alfa.Message)
	err := grpc.Invoke(ctx, "/gateway.GatewayService/Test", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GatewayService service

type GatewayServiceServer interface {
	// Get method receives a simple message and returns it.
	// The message posted as the id parameter will also be returned.
	Get(context.Context, *google_protobuf1.Empty) (*Message, error)
	// Gateway method sets a simple message.
	Set(context.Context, *Message) (*google_protobuf1.Empty, error)
	Test(context.Context, *google_protobuf1.Empty) (*alfa.Message, error)
}

func RegisterGatewayServiceServer(s *grpc.Server, srv GatewayServiceServer) {
	s.RegisterService(&_GatewayService_serviceDesc, srv)
}

func _GatewayService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway.GatewayService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServiceServer).Get(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayService_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServiceServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway.GatewayService/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServiceServer).Set(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _GatewayService_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServiceServer).Test(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gateway.GatewayService/Test",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServiceServer).Test(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _GatewayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gateway.GatewayService",
	HandlerType: (*GatewayServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _GatewayService_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _GatewayService_Set_Handler,
		},
		{
			MethodName: "Test",
			Handler:    _GatewayService_Test_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gateway.proto",
}

func init() { proto.RegisterFile("gateway.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xbf, 0x4e, 0xc3, 0x30,
	0x10, 0x87, 0x95, 0xb4, 0x2a, 0xc2, 0xd0, 0x02, 0x16, 0x7f, 0xaa, 0xc0, 0x80, 0x32, 0x21, 0x10,
	0x3e, 0x41, 0x37, 0x36, 0x2a, 0xaa, 0x4e, 0x08, 0x89, 0x32, 0xb1, 0x39, 0xe9, 0xc5, 0x58, 0x4a,
	0xe2, 0x28, 0xbe, 0x54, 0x62, 0xe5, 0x15, 0x78, 0x34, 0x76, 0x26, 0x1e, 0x04, 0xd9, 0x49, 0x85,
	0x18, 0x60, 0xca, 0xc5, 0xbf, 0xbb, 0x4f, 0xdf, 0xd9, 0x8c, 0xc9, 0x3c, 0x93, 0xa2, 0xaa, 0x0d,
	0x19, 0xde, 0x77, 0x75, 0x74, 0xa2, 0x8c, 0x51, 0x39, 0x82, 0xac, 0x34, 0xc8, 0xb2, 0x34, 0x24,
	0x49, 0x9b, 0xd2, 0xb6, 0x3d, 0xd1, 0x71, 0x97, 0xfa, 0xbf, 0xa4, 0xc9, 0x00, 0x8b, 0x8a, 0x5e,
	0xbb, 0x70, 0xa2, 0x34, 0xbd, 0x34, 0x89, 0x48, 0x4d, 0x01, 0x79, 0xa3, 0x95, 0xbe, 0xac, 0x35,
	0x66, 0x26, 0x37, 0x80, 0xf3, 0x07, 0xb0, 0x75, 0x0a, 0x09, 0x92, 0x84, 0x2a, 0xf1, 0xdf, 0x76,
	0x28, 0xbe, 0x60, 0x1b, 0xf7, 0x68, 0xad, 0x54, 0xc8, 0x47, 0x2c, 0xd4, 0xcb, 0x71, 0x70, 0x1a,
	0x9c, 0x6d, 0x3e, 0x86, 0x7a, 0xc9, 0x77, 0x59, 0xaf, 0xb0, 0x6a, 0x1c, 0xfa, 0x03, 0x57, 0x5e,
	0x7f, 0x06, 0x6c, 0xeb, 0x36, 0xcf, 0xe4, 0x02, 0xeb, 0x95, 0x4e, 0x91, 0x4f, 0x59, 0x6f, 0x8e,
	0xc4, 0x0f, 0x45, 0xab, 0x25, 0xd6, 0x5a, 0x62, 0xe6, 0xb4, 0xa2, 0xa1, 0xf0, 0xeb, 0x75, 0xfc,
	0x78, 0xff, 0xed, 0xe3, 0xeb, 0x3d, 0x1c, 0xf1, 0x6d, 0x58, 0x5d, 0x81, 0x4b, 0x40, 0x21, 0xf1,
	0x19, 0xeb, 0x2d, 0x90, 0xf8, 0xef, 0xde, 0xe8, 0x0f, 0x64, 0x7c, 0xe4, 0x19, 0x7b, 0xf1, 0x0f,
	0xc3, 0x22, 0xdd, 0x04, 0xe7, 0xfc, 0x8e, 0xf5, 0x9f, 0xd0, 0xfe, 0xe7, 0xe2, 0x97, 0x5e, 0xbb,
	0x1c, 0x78, 0xce, 0x0e, 0x1f, 0x3a, 0x8e, 0xbf, 0x16, 0x42, 0x4b, 0xd3, 0xc1, 0xb3, 0x7f, 0x85,
	0x64, 0xe0, 0xa7, 0x27, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x58, 0xa4, 0xe5, 0xa1, 0xa0, 0x01,
	0x00, 0x00,
}
