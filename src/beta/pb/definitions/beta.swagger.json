{
  "swagger": "2.0",
  "info": {
    "title": "Beta Service",
    "description": "Beta Service API consists of a single service which returns a message.",
    "version": "version not set"
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/alfa/{id}/get": {
      "get": {
        "operationId": "Set",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmpty"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "msg",
            "description": "The message to be sent.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "BetaService"
        ]
      }
    },
    "/v1/alfa/{id}/{msg}": {
      "post": {
        "operationId": "Get",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/betaMessage"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "msg",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BetaService"
        ]
      }
    }
  },
  "definitions": {
    "betaMessage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id represents the message identifier."
        },
        "msg": {
          "type": "string",
          "description": "The message to be sent."
        }
      },
      "description": "Message represents a simple message sent to the Alfa service."
    },
    "protobufEmpty": {
      "type": "object",
      "description": "service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "title": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:"
    }
  }
}
