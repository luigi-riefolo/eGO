version: "3"
services:

  service:
    build: .
#    image: golang:1.6.1-alpine
    image: 127.0.0.1:5000/golang
    volumes:
      - .:/go/src/service
    working_dir: /go/src/service
    command: go run /go/src/service/src/service/cmd/main.go
    ports:
      - "7000:7000"
    env_file:
      - .env
#
#  www:
#    build: .
#    image: 127.0.0.1:5000/golang:1.8.3
#    entrypoint: ./cmd/www/www
#    ports:
#      - "6000:6000"
#    networks:
#      - backend
#    env_file:
#      - .env
#
#  api:
#    build: .
#    image: 127.0.0.1:5000/golang:1.8.3
#    entrypoint: ./cmd/api/api
#    ports:
#      - "8080:8080"
#    networks:
#      - backend
#    links:
#      - geo
#      - profile
#      - rate
#    env_file:
#      - .env
#
#  db:
#    image: postgres:9.4
#    container_name: alfa-geo-db
#    volumes:
#      - db-data:/var/lib/postgresql/data
#    networks:
#      - backend
#    deploy:
#      placement:
#        constraints: [node.role == manager]
#
#  geo:
#    container_name: alfa-geo
#    build: .
#    image: 127.0.0.1:5000/golang:1.8.3
#    entrypoint: ./cmd/geo/geo
#    deploy:
#      replicas: 2
#      update_config:
#        parallelism: 2
#        delay: 10s
#      restart_policy:
#        condition: on-failure
#    networks:
#      - backend
#    volumes:
#      - .:/geo
#    links:
#      - db
#    depends_on:
#      - db
#    env_file:
#      - .env
#
#  profile:
#    build: .
#    image: 127.0.0.1:5000/golang:1.8.3
#    entrypoint: ./cmd/profile/profile
#    networks:
#      - backend
#    env_file:
#      - .env
#
#  rate:
#    build: .
#    image: 127.0.0.1:5000/golang:1.8.3
#    entrypoint: ./cmd/rate/rate
#    networks:
#      - backend
#    env_file:
#      - .env
#
#networks:
#  backend:
#
#volumes:
#  db-data:
